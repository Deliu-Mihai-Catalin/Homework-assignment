#include <stdio.h>
#include <stdlib.h>
// Function to check if it's possible to allocate books such that
// no employee gets more than max_load pages
int isFeasible(int books[], int n, int k, int max_load) {
    int num_employees = 1, current_load = 0;

    for (int i = 0; i < n; i++) {
        if (books[i] > max_load) return 0;

        if (current_load + books[i] > max_load) {
            num_employees++;
            current_load = books[i];

            if (num_employees > k) return 0;
        } else {
            current_load += books[i];
        }
    }
    return 1;
}
// Function to find the minimum possible maximum load
int findMinMaxLoad(int books[], int n, int k) {
    int sum = 0;
    for (int i = 0; i < n; i++) sum += books[i];
    int left = 0, right = sum, result = sum;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (isFeasible(books, n, k, mid)) {
            result = mid;
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }
    return result;
}
int main() 
{
    int n, k;
    scanf("%d", &n);
    int books[100];
    for (int i = 0; i < n; i++) 
    {
        scanf("%d", &books[i]);
    }
    scanf("%d", &k);
    int minMaxLoad = findMinMaxLoad(books, n, k);
    printf("%d\n", minMaxLoad);
    return 0;
}

